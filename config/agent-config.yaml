server:
  log_level: 'debug'

# metrics:
#   wal_directory: '${AGENT_TEMP_PATH}/${AGENT_WAL_PATH}'
#   global:
#     scrape_interval: '60s'
#     remote_write:
#       - url: 'http://${CORTEX_HOST}:${CORTEX_PORT}/api/prom/push'
#   configs:
#     - name: '${DEMO_PACKAGE_NAME}'
#       scrape_configs:
#         - job_name: '${DEMO_SERVER_PACKAGE_NAME}'
#           static_configs:
#             - targets:
#                 - '${DEMO_HOST}:${DEMO_PORT}'

logs:
  configs:
    - name: 'SSPortal Client'
      clients:
        - url: 'http://127.0.0.:3100/loki/api/v1/push'
      positions:
        filename: '/tmp/positions-client.yaml'
    - name: 'SSPortal API'
      clients:
        - url: 'http://127.0.0.:3100/loki/api/v1/push'
      positions:
        filename: '/tmp/positions-server.yaml'
      scrape_configs:
        - job_name: 'SSPortal API'
          static_configs:
            - targets:
                - 'localhost'
              labels:
                app: 'SSPortal API'
                __path__: '${AGENT_LOGS_PATH}/${DEMO_SERVER_LOGS_NAME}'

# traces:
#   configs:
#     - name: '${DEMO_PACKAGE_NAME}'
#       remote_write:
#         - endpoint: '${TEMPO_HOST}:${TEMPO_PORT_OTLP_RECEIVER}'
#           insecure: true
#       receivers:
#         otlp:
#           protocols:
#             grpc:

integrations:
  app_agent_receiver:
    autoscrape:
      enable: true
      metrics_instance: 'SSPortal'
    instance: 'SSPortal'
    logs_instance: 'SSPortal Client'
    logs_labels:
      app: 'SSPortal Client'
      kind: ''
    logs_send_timeout: '5s'
    server:
      api_key: '${AGENT_KEY_APP_RECEIVER}'
      cors_allowed_origins:
        - '*'
      host: '0.0.0.0'
      max_allowed_payload_size: 5e+07
      port: ${AGENT_PORT_APP_RECEIVER}
      rate_limiting:
        burstiness: 100
        enabled: true
        rps: 100
    sourcemaps:
      download: true
    traces_instance: 'SSPortal'
